* minReact

- 最小の構成で react(redux/saga) を実験する

* 実験環境

** github-pages

- [[https://n9d.github.io/minReact/][ここ]]で確認できる

** local

- git clone した後、当該フォルダで何らかの形でローカルHTTPサーバを立ち上げる
	- =brew install  http-server= でインストールした http-serverを実行するか
	- =npm install -g httpserver= でインストールした httpserverを実行するか
	- =python -m http.server 3000= で実行
	- =npx serve= で良さそうな気もする(jsやってるんだからコレだろうな)

* babel

 [[file:babel.html][babelでhelloworld]]

- jsxがbabelを必要とするため必要

* React
** jsxなし

[[file:non-jsx.html][jsxなしreact]]

- コンソールで =React= を評価すると reactが持っているメソッド一覧が確認できる (createElementや useState等がある)
- コンソールで =ReactDOM= を評価すると reactが持っているメソッド一覧が確認できる(renderはここにある)


** 仮想DOMを認識しよう

[[file:purecomponent.html][PureComponent]]

- コンソールで確認すると、レンダリングの回数が理解できる

* Redux

[[file:redux.html][Redux]]

- コンソールで開いた後リロードして確認すると、storeの変遷が見れる
- コンソールで =Redux= を評価すると reduxが持っているメソッド一覧が確認できる（以下５つ）

- combineReducers :: reducer合成用
- createStore :: store作成用
- applyMiddleware ::  sagaを使うときに使う

* Redux-Saga

[[file:saga.html][Redux-Saga]]

- コンソールで開いた後リロードして確認すると、storeの変遷が見れる
- コンソールで =ReduxSaga= を評価すると redux-sagaが持っているメソッド一覧が確認できる

- runSaga :: これぐらいしか使わない
- default :: nodeで使うときには createSagaMiddleware となる
- effects :: put,call,take等の関数が入っている

* React-Redux

** 最小構成

[[file:react-redux-render-with-babel.html][React-Redux]]

- 本当はデバッグ（ブラウザ上でのブレイクポイント設置）の観点からbabelを抜きたかったが、Providerの使い方がわからない
- コンソールで開いた後リロードして確認すると、レンダリングのタイミング及びstoreの変遷が見れる
- コンソールで =ReactRedux= を評価すると react-reduxが持っているメソッド一覧が確認できる

- Provider :: React.Componentのトップにコレをかぶせる
- connect :: 引数にReact.Componentを取り、第１引数にstoreの写像を行う関数,第２引数にディスパッチャの写像を行う関数を指定することにより、propsにそれらをマッピングした新しい React.Componentを出力する

** propsオーバーライド

[[file:props-override.html][props-override]]

- ReactRedux.connectの機能によりマッピングされた値はコンポーネントが本来保持する同名のpropsを上書きする
- このことはそのコンポーネントが単独で動作することを確認した後、reduxへ組み込むことができることを意味し、コンポーネントのモジュール性を向上させる
- Tag3Aloneがきちんと動かないのでまだ途中


* index.html 作成スクリプト

#+BEGIN_SRC sh :exports both
cat << HEAD > index.html
<html>
  <head>
    <title>最小構成でReactJS</title>
  </head>
  <body>
    <p> 詳細は<a href="https://github.com/n9d/minReact">minReact</a>を参照のこと </p>
    <p />
HEAD

for file in *.html; do
  title=`cat $file | ruby -e 'print STDIN.read.match(/<title>([^<]*)<\/title>/m)[1]'`
  echo "    <p> <a href='${file}'>${title}</a> ${file} </p>" >> index.html
done

cat << TAIL >> index.html
  </body>
</html>
TAIL

#+END_SRC

#+RESULTS:


* ライブラリ抽出

- umd系の物を持ってくればいい
- 下記一連の作業で最小の必要なものが =./lib= 以下に置かれる
- そのへんのCDNに転がっているやつは古いことが多いので・・・


#+BEGIN_SRC sh :exports both
mkdir lib
npm init -y
npm install babel-standalone
npm install react react-dom
npm install redux
npm install redux-saga
npm install reactx-redux
cp node_modules/babel-standalone/babel.js lib
cp node_modules/react/umd/react.development.js lib
cp node_modules/react-dom/umd/react-dom.development.js lib
cp node_modules/redux/dist/redux.js lib
cp node_modules/redux-saga/dist/redux-saga.umd.js lib
cp node_modules/react-redux/dist/react-redux.js lib
#+END_SRC
