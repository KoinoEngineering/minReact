* minReact

- 最小の構成で react(redux/saga) を実験する

* 実験環境

** github-pages

- [[https://n9d.github.io/minReact/][ここ]]で確認できる

** local

- git clone した後 何らかの形でローカルHTTPサーバを立ち上げる
	- `brew install  http-server` でインストールした http-serverを実行するか
	- `npm install -g httpserver` でインストールした httpserverを実行するか
	- `python -m http.server 3000` で実行
	- npx serve で良さそうな気もする

* babel

 [[file:babel.html][babelでhelloworld]]

- jsxがbabelを必要とするため必要

* React
** jsxなし

[[file:non-jsx.html][jsxなしreact]]

- コンソールで =React= を評価すると reactが持っているメソッド一覧が確認できる (createElementや useState等がある)
- コンソールで =ReactDOM= を評価すると reactが持っているメソッド一覧が確認できる(renderはここにある)


** 仮想DOMを認識しよう

[[file:purecomponent.html][PureComponent]]

- コンソールで確認すると、レンダリングの回数が理解できる

* Redux

[[file:redux.html][Redux]]

- コンソールで開いた後リロードして確認すると、storeの変遷が見れる
- コンソールで =Redux= を評価すると reduxが持っているメソッド一覧が確認できる（以下５つ）

- combineReducers :: reducer合成用
- createStore :: store作成用
- applyMiddleware ::  sagaを使うときに使う


* React-Redux



* redux-saga

[[file:saga.html][Redux-Saga]]

- コンソールで開いた後リロードして確認すると、storeの変遷が見れる
- コンソールで =ReduxSaga= を評価すると redux-sagaが持っているメソッド一覧が確認できる

- runSaga :: これぐらいしか使わない
- default :: nodeで使うときには createSagaMiddleware となる
- effects :: put,call,take等の関数が入っている



* ライブラリ抽出

- umd系の物を持ってくればいい
- 下記一連の作業で最小の必要なものが./lib以下に置かれる

** babel


#+BEGIN_SRC sh :exports both
mkdir lib
npm init -y
npm install babel-standalone
cp node_modules/babel-standalone/babel.js lib
#+END_SRC

** react

#+BEGIN_SRC sh :exports both
npm install react react-dom
cp node_modules/react/umd/react.development.js lib
cp node_modules/react-dom/umd/react-dom.production.min.js lib
#+END_SRC

** redux

#+BEGIN_SRC sh :exports both
npm install redux
cp node_modules/redux/dist/redux.min.js lib
#+END_SRC

** redux-saga

#+BEGIN_SRC sh :exports both
npm install redux-saga
cp node_modules/redux-saga/dist/redux-saga.umd.min.js lib
#+END_SRC
